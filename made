<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pay As You Mow | Professional Garden Maintenance</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Playfair+Display:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #2e7d32;
            --primary-light: #4caf50;
            --primary-dark: #1b5e20;
            --secondary: #ff9800;
            --text: #333333;
            --text-light: #666666;
            --background: #f9f9f9;
            --white: #ffffff;
            --shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', sans-serif;
            line-height: 1.6;
            color: var(--text);
            background-color: var(--background);
            overflow-x: hidden;
        }

        h1, h2, h3, h4 {
            font-family: 'Playfair Display', serif;
            font-weight: 600;
            line-height: 1.2;
            margin-bottom: 1rem;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        section {
            padding: 80px 0;
        }

        .btn {
            display: inline-block;
            padding: 12px 30px;
            background-color: var(--primary);
            color: var(--white);
            border: none;
            border-radius: 30px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
        }

        .btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-3px);
            box-shadow: var(--shadow);
        }

        .btn-secondary {
            background-color: var(--secondary);
        }

        .btn-secondary:hover {
            background-color: #f57c00;
        }

        .btn-quote {
            background: linear-gradient(135deg, #ffb347, #ff7e5f);
            padding: 10px 26px;
            font-size: 0.95rem;
            border-radius: 999px;
            box-shadow: 0 12px 22px rgba(255, 126, 95, 0.25);
            text-transform: none;
            letter-spacing: 0.5px;
        }

        .btn-quote:hover {
            background: linear-gradient(135deg, #ff9566, #ff5f6d);
            transform: translateY(-2px);
            box-shadow: 0 16px 28px rgba(255, 95, 109, 0.3);
        }

        .whatsapp-button {
            position: fixed;
            bottom: 28px;
            right: 32px;
            z-index: 1200;
            display: inline-flex;
            align-items: center;
            gap: 10.5px;
            padding: 12px 21px;
            background: linear-gradient(135deg, #25d366 0%, #128c7e 45%, #075e54 100%);
            color: var(--white);
            text-decoration: none;
            border-radius: 999px;
            box-shadow: 0 18px 35px rgba(7, 94, 84, 0.35);
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            isolation: isolate;
        }

        .whatsapp-button::after {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: inherit;
            background: radial-gradient(circle at top left, rgba(255, 255, 255, 0.45), transparent 55%);
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
            z-index: 1;
        }

        .whatsapp-button:hover {
            transform: translateY(-6px) scale(1.02);
            box-shadow: 0 22px 40px rgba(7, 94, 84, 0.4);
        }

        .whatsapp-button:hover::after {
            opacity: 1;
        }

        .whatsapp-button .icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 31.5px;
            height: 31.5px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            font-size: 16.5px;
            box-shadow: inset 0 4px 10px rgba(0, 0, 0, 0.15);
        }

        .whatsapp-button .whatsapp-text {
            display: flex;
            flex-direction: column;
            line-height: 1.1;
        }

        .whatsapp-button .whatsapp-text span:first-child {
            font-size: 0.53rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            opacity: 0.85;
        }

        .whatsapp-button .whatsapp-text span:last-child {
            font-size: 0.79rem;
        }

        @keyframes whatsapp-pulse {
            0% {
                box-shadow: 0 0 0 0 rgba(37, 211, 102, 0.4);
            }
            70% {
                box-shadow: 0 0 0 18px rgba(37, 211, 102, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(37, 211, 102, 0);
            }
        }

        .whatsapp-button::before {
            content: '';
            position: absolute;
            inset: -6px;
            border-radius: inherit;
            border: 1px solid rgba(255, 255, 255, 0.25);
            animation: whatsapp-pulse 2.8s infinite;
            pointer-events: none;
            z-index: 0;
        }

        @media (max-width: 768px) {
            .whatsapp-button {
                bottom: 18px;
                right: 18px;
                left: auto;
                padding: 10.5px 18px;
                gap: 9px;
            }

            .whatsapp-button .whatsapp-text span:last-child {
                font-size: 0.71rem;
            }
        }

        /* Header Styles */
        header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            z-index: 1000;
            background: linear-gradient(120deg, rgba(46, 125, 50, 0.95) 0%, rgba(26, 94, 32, 0.92) 60%, rgba(255, 152, 0, 0.85) 100%);
            box-shadow: 0 20px 45px rgba(14, 51, 23, 0.18);
            transition: var(--transition);
            backdrop-filter: blur(6px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            overflow: hidden;
        }

        header::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.18) 0%, rgba(255, 255, 255, 0) 65%);
            pointer-events: none;
            z-index: 1;
        }

        header.scrolled {
            padding: 10px 0;
            background: rgba(255, 255, 255, 0.98);
            border-bottom-color: rgba(46, 125, 50, 0.15);
            box-shadow: 0 12px 25px rgba(23, 61, 32, 0.15);
        }

        header.scrolled::before {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.65) 0%, rgba(46, 125, 50, 0.1) 65%);
            opacity: 0.85;
        }

        .header-container {
            position: relative;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 22px 0;
            gap: 40px;
            z-index: 2;
        }

        .logo {
            display: inline-flex;
            align-items: center;
            gap: 14px;
            font-family: 'Playfair Display', serif;
            font-size: 26px;
            font-weight: 700;
            color: var(--white);
            text-decoration: none;
            letter-spacing: 0.5px;
        }

        .logo-icon {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 54px;
            height: 54px;
            border-radius: 16px;
            background: radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.85), rgba(255, 255, 255, 0.1));
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.18);
            padding: 8px;
            position: relative;
            overflow: hidden;
        }

        .logo-icon::after {
            content: '';
            position: absolute;
            inset: 2px;
            border-radius: 14px;
            background: linear-gradient(135deg, rgba(46, 125, 50, 0.95), rgba(67, 160, 71, 0.9));
            z-index: 1;
        }

        .logo-icon svg {
            position: relative;
            z-index: 2;
            width: 100%;
            height: 100%;
        }

        .logo-wordmark {
            display: inline-flex;
            flex-direction: column;
            line-height: 1;
        }

        .logo-wordmark strong {
            font-size: 0.65em;
            letter-spacing: 4px;
            text-transform: uppercase;
            font-weight: 600;
            color: rgba(255, 255, 255, 0.82);
            margin-bottom: 6px;
        }

        .logo-title {
            font-size: 1.15em;
            line-height: 1;
        }

        .logo-title .highlight {
            color: var(--secondary);
        }

        header.scrolled .logo {
            color: var(--primary);
        }

        header.scrolled .logo-wordmark strong {
            color: var(--primary-light);
        }

        header.scrolled .logo-title {
            color: var(--primary);
        }

        header.scrolled .logo-title .highlight {
            color: var(--secondary);
        }

        nav ul {
            display: flex;
            list-style: none;
            align-items: center;
            gap: 24px;
        }

        nav ul li {
            position: relative;
        }

        nav ul li a {
            color: rgba(255, 255, 255, 0.85);
            text-decoration: none;
            font-weight: 600;
            letter-spacing: 0.4px;
            transition: var(--transition);
            padding: 6px 4px;
            display: inline-flex;
            align-items: center;
            position: relative;
        }

        nav ul li a::after {
            content: '';
            position: absolute;
            left: 0;
            bottom: -8px;
            width: 0;
            height: 3px;
            border-radius: 999px;
            background: linear-gradient(120deg, var(--secondary), #ffe082);
            transition: var(--transition);
        }

        nav ul li a:hover {
            color: var(--white);
        }

        nav ul li a:hover::after {
            width: 100%;
        }

        header.scrolled nav ul li a {
            color: var(--text);
        }

        header.scrolled nav ul li a:hover {
            color: var(--primary);
        }

        header.scrolled nav ul li a::after {
            background: linear-gradient(120deg, var(--primary), var(--secondary));
        }

        .mobile-menu-btn {
            display: none;
            background: none;
            border: none;
            font-size: 26px;
            color: var(--white);
            cursor: pointer;
            transition: var(--transition);
        }

        .mobile-menu-btn:hover {
            transform: scale(1.05);
            color: var(--secondary);
        }

        header.scrolled .mobile-menu-btn {
            color: var(--primary);
        }

        /* Hero Section */
        .hero {
            position: relative;
            min-height: 80vh;
            color: var(--white);
            overflow: hidden;
        }

        .hero-slide {
            --hero-image: none;
            position: absolute;
            inset: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            padding: 0 20px;
            background-image: var(--hero-image);
            background-size: cover;
            background-position: center;
            opacity: 0;
            transform: scale(1.04);
            transition: opacity 1s ease, transform 8s ease;
            pointer-events: none;
        }

        .hero-slide::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(rgba(0, 0, 0, 0.55), rgba(0, 0, 0, 0.35));
            z-index: 1;
        }

        .hero-slide.active {
            opacity: 1;
            z-index: 2;
            transform: scale(1);
            pointer-events: auto;
        }

        .hero-slide .container {
            position: relative;
            z-index: 3;
            width: 100%;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
            opacity: 0;
            transform: translateY(30px);
            transition: opacity 0.8s ease, transform 0.8s ease;
        }

        .hero-slide.active .hero-content {
            opacity: 1;
            transform: translateY(0);
        }

        .hero h1 {
            font-size: 3.5rem;
            margin-bottom: 20px;
            text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);
        }

        .hero p {
            font-size: 1.2rem;
            margin-bottom: 30px;
            max-width: 650px;
            margin-left: auto;
            margin-right: auto;
        }

        .hero-actions {
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
        }

        

        /* Services Section */
        .services {
            background-color: var(--white);
        }

        .section-title {
            text-align: center;
            margin-bottom: 50px;
        }

        .section-title h2 {
            font-size: 2.5rem;
            color: var(--primary);
            position: relative;
            display: inline-block;
        }

        .section-title h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background-color: var(--secondary);
        }

        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
        }

        .service-card {
            background-color: var(--white);
            border-radius: 24px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition);
            display: flex;
            flex-direction: column;
        }

        .service-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
        }

        .service-image {
            position: relative;
            width: 100%;
            padding-top: 62%;
            overflow: hidden;
        }

        .service-image img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            filter: saturate(1.05);
            transition: transform 0.5s ease;
        }

        .service-card:hover .service-image img {
            transform: scale(1.05);
        }

        .service-content {
            padding: 28px;
            display: flex;
            flex-direction: column;
            gap: 12px;
            height: 100%;
        }

        .service-content h3 {
            font-size: 1.5rem;
            margin: 0;
        }

        .service-content p {
            color: var(--text-light);
            margin: 0;
        }

        /* About Section */
        .about {
            background-color: var(--background);
            padding-bottom: 56px;
        }

        .about-content {
            display: flex;
            align-items: center;
            gap: 50px;
            background: linear-gradient(135deg, rgba(103, 159, 87, 0.18) 0%, rgba(255, 255, 255, 0) 65%);
            border-radius: 18px;
            padding: 50px;
            position: relative;
            overflow: hidden;
        }

        .about-content::before {
            content: "";
            position: absolute;
            top: -40%;
            left: -20%;
            width: 55%;
            aspect-ratio: 1 / 1;
            background: radial-gradient(circle at center, rgba(255, 255, 255, 0.5) 0%, rgba(103, 159, 87, 0.25) 55%, rgba(103, 159, 87, 0) 80%);
            z-index: 0;
            opacity: 0.8;
            pointer-events: none;
        }

        .about-text {
            flex: 1;
            position: relative;
            z-index: 1;
        }

        .about-text p {
            text-align: justify;
        }

        .about-text .btn-quote {
            margin-top: 24px;
            font-size: 0.85rem;
            padding: 8px 22px;
        }

        .about-video {
            flex: 1;
            border-radius: 18px;
            overflow: hidden;
            box-shadow: 0 30px 60px rgba(37, 68, 35, 0.25);
            position: relative;
            background: radial-gradient(circle at top left, rgba(37, 68, 35, 0.35), rgba(37, 68, 35, 0.15) 45%, rgba(0, 0, 0, 0) 75%);
            isolation: isolate;
            aspect-ratio: 16 / 9;
        }

        .about-video::before {
            content: "";
            position: absolute;
            inset: 0;
            background: linear-gradient(140deg, rgba(37, 68, 35, 0.4) 0%, rgba(37, 68, 35, 0.05) 60%, rgba(255, 255, 255, 0) 100%);
            mix-blend-mode: soft-light;
            pointer-events: none;
            z-index: 1;
        }

        .about-video iframe {
            position: absolute;
            inset: 0;
            width: 100%;
            height: 100%;
            border: 0;
            border-radius: inherit;
        }

        /* FAQ Section */
        .faq {
            background-color: var(--background);
            padding-top: 56px;
        }

        .faq .section-title {
            margin-bottom: 32px;
        }

        .faq .section-title h2 {
            font-size: 2.2rem;
            letter-spacing: -0.01em;
        }

        .faq-intro {
            max-width: 760px;
            margin: 0 auto 36px;
            text-align: center;
            color: var(--text-light);
            font-size: 1rem;
            line-height: 1.65;
        }

        .faq-grid {
            display: grid;
            gap: 38px 60px;
            grid-template-columns: repeat(2, minmax(0, 1fr));
            align-items: stretch;
        }

        .faq-card {
            background-color: var(--white);
            border-radius: 22px;
            padding: 32px 34px;
            box-shadow: 0 22px 45px rgba(37, 68, 35, 0.12);
            border: 1px solid rgba(37, 68, 35, 0.08);
            position: relative;
            overflow: hidden;
        }

        .faq-card::before {
            content: "";
            position: absolute;
            inset: 0;
            border-radius: inherit;
            border-top: 4px solid rgba(46, 125, 50, 0.5);
            pointer-events: none;
            box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.35);
        }

        .faq-card h3 {
            font-size: 1.3rem;
            color: var(--text);
            margin-bottom: 14px;
        }

        .faq-card p {
            color: var(--text-light);
            font-size: 1rem;
            line-height: 1.75;
        }

        @media (max-width: 900px) {
            .faq-grid {
                grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
                gap: 32px;
            }

            .faq {
                padding-top: 48px;
            }
        }

        @media (max-width: 620px) {
            .about {
                padding-bottom: 48px;
            }

            .faq {
                padding-top: 44px;
            }

            .faq-grid {
                grid-template-columns: 1fr;
            }
        }

        .faq-card p + p {
            margin-top: 12px;
        }

        /* Video Showcase Section */
        .video-showcase {
            background: linear-gradient(135deg, rgba(37, 68, 35, 0.1) 0%, rgba(37, 68, 35, 0.3) 55%, rgba(37, 68, 35, 0.05) 100%);
            position: relative;
            overflow: hidden;
        }

        .video-showcase::before {
            content: "";
            position: absolute;
            top: -220px;
            right: -160px;
            width: 480px;
            height: 480px;
            background: radial-gradient(circle at center, rgba(255, 255, 255, 0.25) 0%, rgba(103, 159, 87, 0.4) 45%, rgba(37, 68, 35, 0) 75%);
            filter: blur(0px);
            opacity: 0.75;
            pointer-events: none;
        }

        .video-showcase::after {
            content: "";
            position: absolute;
            bottom: -180px;
            left: -120px;
            width: 380px;
            height: 380px;
            background: radial-gradient(circle at center, rgba(103, 159, 87, 0.3) 0%, rgba(103, 159, 87, 0.15) 40%, rgba(37, 68, 35, 0) 70%);
            opacity: 0.5;
            pointer-events: none;
        }

        .video-showcase .section-title h2 {
            font-size: 2.4rem;
        }

        .video-showcase .section-eyebrow {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            font-size: 0.78rem;
            text-transform: uppercase;
            letter-spacing: 0.12em;
            font-weight: 600;
            color: var(--primary-dark);
            background: rgba(255, 255, 255, 0.65);
            padding: 6px 18px;
            border-radius: 999px;
            box-shadow: 0 10px 30px rgba(37, 68, 35, 0.12);
        }

        .video-showcase .section-eyebrow i {
            color: var(--primary);
        }

        .video-showcase .section-title p {
            max-width: 680px;
            margin: 18px auto 0;
        }

        .video-grid {
            display: grid;
            grid-template-columns: repeat(3, minmax(0, 1fr));
            gap: 32px;
            position: relative;
            z-index: 1;
        }

        .video-card {
            background: rgba(255, 255, 255, 0.96);
            border-radius: 24px;
            padding: 26px 26px 32px;
            box-shadow: 0 24px 60px rgba(37, 68, 35, 0.22);
            border: 1px solid rgba(255, 255, 255, 0.6);
            position: relative;
            overflow: hidden;
            transition: transform 0.4s ease, box-shadow 0.4s ease;
        }

        .video-card::after {
            content: "";
            position: absolute;
            inset: 0;
            background: linear-gradient(145deg, rgba(103, 159, 87, 0.18), rgba(103, 159, 87, 0));
            opacity: 0;
            transition: opacity 0.4s ease;
            pointer-events: none;
        }

        .video-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 30px 70px rgba(37, 68, 35, 0.26);
        }

        .video-card:hover::after {
            opacity: 1;
        }

        .video-card-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 20px;
            position: relative;
            z-index: 2;
        }

        .video-card-label {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            padding: 6px 16px;
            border-radius: 999px;
            background: rgba(103, 159, 87, 0.12);
            color: var(--primary-dark);
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.08em;
        }

        .video-card-label i {
            color: var(--primary);
        }

        .video-card-metric {
            font-size: 0.85rem;
            font-weight: 600;
            color: var(--text-light);
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .video-card-metric i {
            color: var(--primary);
        }

        .video-card h3 {
            font-size: 1.35rem;
            margin-bottom: 12px;
            color: var(--text);
            position: relative;
            z-index: 2;
        }

        .video-card p {
            color: var(--text-light);
            line-height: 1.7;
            margin-bottom: 22px;
            position: relative;
            z-index: 2;
        }

        .video-frame {
            border-radius: 18px;
            overflow: hidden;
            position: relative;
            aspect-ratio: 16 / 9;
            box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.45);
        }

        .video-frame::before {
            content: "";
            position: absolute;
            inset: 0;
            background: radial-gradient(circle at top left, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));
            mix-blend-mode: soft-light;
            pointer-events: none;
            z-index: 1;
        }

        .video-frame iframe {
            width: 100%;
            height: 100%;
            border: 0;
            display: block;
            border-radius: inherit;
        }

        .video-thumbnail {
            position: absolute;
            inset: 0;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            border-radius: inherit;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            visibility: hidden;
            transition: opacity 0.3s ease;
            cursor: pointer;
            pointer-events: none;
            z-index: 3;
        }

        .video-thumbnail::after {
            content: 'Replay video';
            font-size: 0.9rem;
            letter-spacing: 0.6px;
            text-transform: uppercase;
            color: var(--white);
            background: rgba(0, 0, 0, 0.65);
            padding: 10px 22px;
            border-radius: 999px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.25);
        }

        .video-thumbnail.visible {
            opacity: 1;
            visibility: visible;
            pointer-events: auto;
        }

        @media (max-width: 1024px) {
            .video-grid {
                grid-template-columns: repeat(2, minmax(0, 1fr));
            }
        }

        @media (max-width: 720px) {
            .video-grid {
                grid-template-columns: 1fr;
            }

            .video-showcase .section-title h2 {
                font-size: 2rem;
            }
        }

        /* Testimonials Section */
        .testimonials {
            background-color: var(--background);
        }

        .testimonials-slider {
            max-width: 800px;
            margin: 0 auto;
            position: relative;
        }

        .testimonial {
            background-color: var(--white);
            border-radius: 10px;
            padding: 40px;
            box-shadow: var(--shadow);
            text-align: center;
            display: none;
        }

        .testimonial.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .testimonial-text {
            font-style: italic;
            margin-bottom: 20px;
            font-size: 1.1rem;
        }

        .testimonial-author {
            font-weight: 600;
            color: var(--primary);
        }

        .testimonial-nav {
            display: flex;
            justify-content: center;
            margin-top: 30px;
        }

        .testimonial-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #ddd;
            margin: 0 5px;
            cursor: pointer;
            transition: var(--transition);
        }

        .testimonial-dot.active {
            background-color: var(--primary);
        }

        /* Booking Section */
        .booking {
            position: relative;
            color: var(--white);
            background: linear-gradient(135deg, rgba(27, 94, 32, 0.95), rgba(76, 175, 80, 0.85));
            overflow: hidden;
        }

        .booking::before,
        .booking::after {
            content: '';
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.18), transparent 65%);
            opacity: 0.35;
            pointer-events: none;
        }

        .booking::before {
            width: 420px;
            height: 420px;
            top: -210px;
            right: -160px;
        }

        .booking::after {
            width: 540px;
            height: 540px;
            bottom: -260px;
            left: -220px;
        }

        .booking .container {
            position: relative;
            z-index: 1;
        }

        .booking-intro {
            text-align: center;
            max-width: 760px;
            margin: 0 auto 48px;
        }

        .booking-intro span {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 18px;
            border-radius: 999px;
            text-transform: uppercase;
            letter-spacing: 0.6px;
            background: rgba(255, 255, 255, 0.12);
            color: rgba(255, 255, 255, 0.85);
            margin-bottom: 18px;
        }

        .booking-intro h2 {
            font-size: 2.6rem;
            margin-bottom: 16px;
        }

        .booking-intro p {
            color: rgba(255, 255, 255, 0.85);
            font-size: 1.05rem;
            margin: 0;
        }

        .booking-status {
            text-align: center;
            font-weight: 600;
            margin-bottom: 24px;
            color: rgba(255, 255, 255, 0.92);
        }

        .booking-refresh-cta {
            display: flex;
            justify-content: center;
            margin-bottom: 28px;
        }

        .booking-refresh-btn {
            display: inline-flex;
            align-items: center;
            gap: 10px;
            background: linear-gradient(135deg, rgba(129, 199, 132, 0.95), rgba(46, 125, 50, 0.95));
            box-shadow: 0 18px 35px rgba(12, 38, 18, 0.28);
        }

        .booking-refresh-btn .icon {
            display: inline-flex;
            width: 20px;
            height: 20px;
            align-items: center;
            justify-content: center;
            font-size: 0.95rem;
        }

        .booking-refresh-btn[disabled] {
            opacity: 0.7;
            cursor: wait;
            box-shadow: none;
        }

        .booking-layout {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 32px;
            align-items: start;
        }

        .booking-schedule,
        .booking-form {
            background: rgba(255, 255, 255, 0.12);
            border-radius: 24px;
            padding: 28px;
            backdrop-filter: blur(4px);
            box-shadow: 0 24px 50px rgba(12, 38, 18, 0.24);
        }

        .booking-schedule header,
        .booking-form header {
            margin-bottom: 18px;
        }

        .booking-schedule h3,
        .booking-form h3 {
            margin: 0 0 8px;
            font-size: 1.5rem;
            color: var(--white);
        }

        .booking-schedule p,
        .booking-form p {
            margin: 0;
            color: rgba(255, 255, 255, 0.75);
            font-size: 0.95rem;
        }

        .booking-days {
            display: grid;
            gap: 18px;
        }

        .booking-day {
            border-radius: 18px;
            padding: 18px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.15);
        }

        .booking-day-header {
            display: flex;
            justify-content: space-between;
            align-items: baseline;
            margin-bottom: 12px;
        }

        .booking-day-title {
            font-weight: 700;
            font-size: 1.1rem;
            color: var(--white);
        }

        .booking-day-date {
            font-size: 0.9rem;
            color: rgba(255, 255, 255, 0.7);
        }

        .booking-slots {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(110px, 1fr));
            gap: 12px;
        }

        .booking-slot {
            padding: 12px 14px;
            border-radius: 14px;
            background: rgba(255, 255, 255, 0.16);
            border: 1px solid transparent;
            text-align: center;
            font-weight: 600;
            cursor: pointer;
            color: var(--white);
            transition: var(--transition);
        }

        .booking-slot:hover {
            background: rgba(255, 255, 255, 0.28);
        }

        .booking-slot[disabled] {
            opacity: 0.55;
            cursor: not-allowed;
        }

        .booking-slot.selected {
            background: var(--white);
            color: var(--primary-dark);
            box-shadow: 0 12px 30px rgba(15, 70, 20, 0.35);
        }

        .booking-form form {
            display: grid;
            gap: 18px;
        }

        .booking-form label {
            display: block;
            margin-bottom: 6px;
            font-weight: 600;
            color: var(--white);
        }

        .booking-form input {
            width: 100%;
            padding: 12px 14px;
            border-radius: 12px;
            border: none;
            font-family: 'Montserrat', sans-serif;
            background: rgba(255, 255, 255, 0.9);
            color: var(--text);
        }

        .booking-form input:focus {
            outline: 3px solid rgba(255, 255, 255, 0.45);
        }

        .booking-form button {
            padding: 14px 18px;
            border-radius: 999px;
            border: none;
            font-weight: 700;
            background: var(--white);
            color: var(--primary-dark);
            cursor: pointer;
            transition: var(--transition);
        }

        .booking-form button:hover {
            transform: translateY(-2px);
            box-shadow: 0 16px 32px rgba(12, 38, 18, 0.25);
        }

        .booking-form button[disabled] {
            opacity: 0.65;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .booking-feedback {
            padding: 14px 16px;
            border-radius: 14px;
            background: rgba(255, 255, 255, 0.2);
            color: var(--white);
            font-weight: 600;
            display: none;
        }

        .booking-feedback.visible {
            display: block;
        }

        .booking-feedback.success {
            background: rgba(129, 199, 132, 0.35);
            color: var(--white);
        }

        .booking-feedback.error {
            background: rgba(244, 67, 54, 0.3);
            color: #ffebee;
        }

        .booking-no-slots {
            margin: 8px 0 0;
            color: rgba(255, 255, 255, 0.75);
            font-size: 0.9rem;
        }

        .booking-manual-note {
            margin-top: 16px;
            padding: 12px 14px;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.16);
            color: rgba(255, 255, 255, 0.9);
            font-size: 0.9rem;
        }

        .booking-suggestions {
            margin: 12px 0;
            padding-left: 22px;
            color: rgba(255, 255, 255, 0.85);
        }

        .booking-suggestions li {
            margin-bottom: 6px;
        }

        /* Footer */
        footer {
            background-color: var(--primary-dark);
            color: var(--white);
            padding: 60px 0 30px;
        }

        .footer-content {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 40px;
            margin-bottom: 40px;
        }

        .footer-column h3 {
            font-size: 1.3rem;
            margin-bottom: 20px;
            position: relative;
            padding-bottom: 10px;
        }

        .footer-column h3::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 40px;
            height: 2px;
            background-color: var(--secondary);
        }

        .footer-links {
            list-style: none;
        }

        .footer-links li {
            margin-bottom: 10px;
        }

        .footer-links a {
            color: #ccc;
            text-decoration: none;
            transition: var(--transition);
        }

        .footer-links a:hover {
            color: var(--white);
            padding-left: 5px;
        }

        .social-links {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .social-links a {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background-color: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            color: var(--white);
            transition: var(--transition);
        }

        .social-links a:hover {
            background-color: var(--secondary);
            transform: translateY(-3px);
        }

        .copyright {
            text-align: center;
            padding-top: 30px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            font-size: 0.9rem;
            color: #ccc;
        }

        /* Responsive Styles */
        @media (max-width: 992px) {
            .about-content {
                padding: 40px;
            }

            .faq-grid {
                gap: 28px;
            }

            .booking-grid {
                grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            }

            .support-card {
                text-align: center;
            }
        }

        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }

            .about-content {
                padding: 30px;
                gap: 35px;
            }

            .faq .section-title h2 {
                font-size: 1.9rem;
            }

            .faq-intro {
                font-size: 0.95rem;
            }

            .faq-grid {
                gap: 24px;
            }

            .faq-card {
                padding: 28px 24px;
            }

            .faq-card h3 {
                font-size: 1.25rem;
            }

            .mobile-menu-btn {
                display: block;
            }

            .logo {
                font-size: 24px;
            }

            .logo-icon {
                width: 48px;
                height: 48px;
            }

            .logo-wordmark strong {
                font-size: 0.6em;
                letter-spacing: 3px;
            }

            nav {
                position: fixed;
                top: 80px;
                left: -100%;
                width: 100%;
                background: linear-gradient(135deg, rgba(46, 125, 50, 0.95), rgba(26, 94, 32, 0.92));
                transition: var(--transition);
                box-shadow: 0 10px 10px rgba(0, 0, 0, 0.1);
            }

            nav.active {
                left: 0;
            }

            nav ul {
                flex-direction: column;
                padding: 20px;
            }

            nav ul li {
                margin: 0 0 15px 0;
            }

            nav ul li a {
                color: rgba(255, 255, 255, 0.92);
                font-size: 1.1rem;
            }

            nav ul li a::after {
                bottom: -4px;
            }

            header.scrolled nav ul li a {
                color: rgba(255, 255, 255, 0.92);
            }

            .section-title h2 {
                font-size: 2rem;
            }

            .service-content {
                padding: 24px;
            }

            .booking-intro {
                margin-bottom: 36px;
            }

            .booking-intro h2 {
                font-size: 2.3rem;
            }

            .booking-layout {
                grid-template-columns: 1fr;
            }

            .booking-schedule,
            .booking-form {
                padding: 24px;
            }

            .booking-slots {
                grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));
            }

            .booking-status {
                font-size: 1rem;
            }
        }

        @media (max-width: 576px) {
            .hero h1 {
                font-size: 2rem;
            }

            .hero p {
                font-size: 1rem;
            }

            .btn {
                padding: 10px 25px;
            }

            .service-content {
                padding: 20px;
            }

            .faq .section-title h2 {
                font-size: 1.7rem;
            }

            .faq-intro {
                font-size: 0.92rem;
            }

            .faq-card {
                padding: 26px 22px;
            }

            .faq-card h3 {
                font-size: 1.18rem;
            }

            .logo {
                font-size: 22px;
            }

            .logo-icon {
                width: 44px;
                height: 44px;
            }

            .booking-intro h2 {
                font-size: 2rem;
            }

            .booking-intro p {
                font-size: 1rem;
            }

            .booking-schedule,
            .booking-form {
                padding: 20px;
            }

            .booking-refresh-cta {
                margin-bottom: 24px;
            }

            .booking-refresh-btn {
                width: 100%;
                justify-content: center;
            }

            .booking-slots {
                gap: 10px;
            }

            .booking-slot {
                padding: 10px 12px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header id="header">
        <div class="container header-container">
            <a href="#" class="logo">
                <span class="logo-icon" aria-hidden="true">
                    <svg viewBox="0 0 64 64" xmlns="http://www.w3.org/2000/svg" role="presentation">
                        <defs>
                            <linearGradient id="logo-leaf-gradient" x1="12%" y1="12%" x2="88%" y2="88%">
                                <stop offset="0%" stop-color="#d4ff91" />
                                <stop offset="45%" stop-color="#81c784" />
                                <stop offset="100%" stop-color="#2e7d32" />
                            </linearGradient>
                            <linearGradient id="logo-blade-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" stop-color="#ffecb3" />
                                <stop offset="100%" stop-color="#ffa000" />
                            </linearGradient>
                        </defs>
                        <path d="M32 8c-9.8 7.1-16 16.9-16 27.6 0 10.8 7.4 17.8 16 20.4 8.6-2.6 16-9.6 16-20.4C48 24.9 41.8 15.1 32 8z" fill="url(#logo-leaf-gradient)" />
                        <path d="M20.5 36.4c6.8-1.7 12.9-4.8 17.9-9.4-1.2 4.9-4.3 10.5-9 15.6-3.7 4.1-8.1 7.5-12.3 9.6 1.1-5.4 2.3-10.9 3.4-15.8z" fill="#f1f8e9" opacity="0.55" />
                        <path d="M33.5 14.7c4.9 2.5 8.1 6.2 9.6 10.9-4.3 4.4-9.3 7.2-15.6 8.7 1.6-6.9 3.7-13.2 6-19.6z" fill="#a5d6a7" opacity="0.8" />
                        <path d="M28.2 48.5c4.7-4.1 8.7-8.7 11.7-13.5-0.8 6.5-4.3 11.6-11.7 13.5z" fill="url(#logo-blade-gradient)" />
                        <path d="M17 51.5c7-1.2 12.7-4.2 17.4-9 1.1 2.5 0.5 5.4-1.8 7.6-2.1 2.1-5.3 3.3-8.8 3.3-2.4 0-4.6-0.6-6.8-1.9z" fill="#fff8e1" opacity="0.7" />
                    </svg>
                </span>
                <span class="logo-wordmark">
                    <strong>Tailored Lawn Care</strong>
                    <span class="logo-title">Pay As You <span class="highlight">Mow</span></span>
                </span>
            </a>
            <button class="mobile-menu-btn" id="mobileMenuBtn">
                <i class="fas fa-bars"></i>
            </button>
            <nav id="nav">
                <ul>
                    <li><a href="#home">Home</a></li>
                    <li><a href="#services">Services</a></li>
                    <li><a href="#about">About</a></li>
                    <li><a href="#faq">FAQ</a></li>
                    <li><a href="#voices">Voices</a></li>
                    <li><a href="#testimonials">Testimonials</a></li>
                    <li><a href="#booking">Book</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <div class="hero-slide active" style="--hero-image: url('https://image.pollinations.ai/prompt/Ultra%20realistic%20photo%20of%20a%20professional%20male%20gardener%20with%20olive%20skin%20pushing%20a%20lawn%20mower%20across%20a%20lush%20small%20urban%20garden%2C%20wearing%20khaki%20shorts%20and%20a%20green%20t-shirt%2C%20bright%20summer%20day%2C%20hyper-detailed%2C%208k');">
            <div class="container">
                <div class="hero-content">
                    <h1>Garden Maintenance Service</h1>
                    <p>Probably the best rates in Tameside.</p>
                    <div class="hero-actions">
                        <a href="#booking" class="btn">Get a Free Quote</a>
                        <a href="#services" class="btn btn-secondary">Our Services</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="hero-slide" style="--hero-image: url('https://image.pollinations.ai/prompt/Ultra%20realistic%20photo%20of%20the%20same%20professional%20male%20gardener%20with%20olive%20skin%20on%20his%20hands%20and%20knees%20weeding%20a%20flower%20border%20in%20a%20well-kept%20urban%20garden%2C%20wearing%20khaki%20shorts%20and%20a%20green%20t-shirt%2C%20bright%20summer%20day%2C%20hyper-detailed%2C%208k');">
            <div class="container">
                <div class="hero-content">
                    <h1>Garden Maintenance Service</h1>
                    <p>Detailed border care, weeding, and mowing tailored to your garden.</p>
                    <div class="hero-actions">
                        <a href="#booking" class="btn">Get a Free Quote</a>
                        <a href="#services" class="btn btn-secondary">Our Services</a>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Services Section -->
    <section class="services" id="services">
        <div class="container">
            <div class="section-title">
                <h2>Our Services</h2>
                <p>Comprehensive garden care tailored to your needs</p>
            </div>
            <div class="services-grid">
                <div class="service-card">
                    <div class="service-image">
                        <img src="https://image.pollinations.ai/prompt/Realistic%20photo%20of%20freshly%20mowed%20lawn%20with%20striped%20patterns%2C%20modern%20electric%20lawn%20mower%20parked%2C%20no%20people%2C%20bright%20day" alt="Close-up of a freshly mowed lawn with a modern electric mower and no people">
                    </div>
                    <div class="service-content">
                        <h3>Lawn Mowing</h3>
                        <p>We provide regular mowing to keep your lawn neat and healthy. Grass is cut to the right length, and edges are trimmed for a clean, polished look. Routine care helps maintain a lush, green lawn.</p>
                    </div>
                </div>
                <div class="service-card">
                    <div class="service-image">
                        <img src="https://image.pollinations.ai/prompt/Realistic%20photo%20of%20neatly%20trimmed%20garden%20hedges%20with%20electric%20shears%20resting%20nearby%2C%20detailed%20texture%2C%20no%20people%2C%20soft%20morning%20light" alt="Neatly trimmed hedges with electric shears resting nearby and no people present">
                    </div>
                    <div class="service-content">
                        <h3>Hedge Trimming</h3>
                        <p>We trim and shape hedges and bushes to maintain a tidy appearance. Overgrown branches are carefully removed for healthy growth. Regular pruning enhances your garden's overall beauty.</p>
                    </div>
                </div>
                <div class="service-card">
                    <div class="service-image">
                        <img src="https://image.pollinations.ai/prompt/Realistic%20photo%20of%20eco-friendly%20weed%20control%20tools%20arranged%20next%20to%20flowerbeds%2C%20lush%20greenery%2C%20no%20people%2C%20sunny%20garden" alt="Eco-friendly weed control tools arranged beside colorful flowerbeds with no people in view">
                    </div>
                    <div class="service-content">
                        <h3>Weed Control</h3>
                        <p>We keep your garden neat by removing weeds from flower beds, borders, and pathways. Edges are trimmed, debris is cleared, and plants are arranged to maintain a tidy and well-kept appearance.</p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section class="about" id="about">
        <div class="container">
            <div class="section-title">
                <h2>About Andy</h2>
                <p>Friendly, professional garden maintenance across Audenshaw and Denton</p>
            </div>
            <div class="about-content">
                <div class="about-text">
                    <h3>Meet Your Gardener</h3>
                    <p>Hi, I’m Andy, a dedicated garden maintenance professional with 14 years of experience serving Audenshaw and Denton. I take pride in delivering high-quality service at competitive rates while helping customers maintain beautiful outdoor spaces.</p>
                    <p>Gardening is more than a job—it’s my passion. I enjoy working in nature, meeting people, and staying active. As I operate part-time, availability is limited, but I always strive to accommodate my customers. If you're looking for a reliable gardener, feel free to get in touch!</p>
                    <a href="#booking" class="btn btn-quote">Arrange a Free Quote</a>
                </div>
                <div class="about-video">
                    <iframe src="https://www.youtube.com/embed/oJrPPeow__s?si=4qciSvhRowzZ9yMh" title="Pay As You Mow introduction video" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq" id="faq">
        <div class="container">
            <div class="section-title">
                <h2>FAQ</h2>
            </div>
            <p class="faq-intro">We know choosing the right gardener raises a few questions. Here are the answers we share with new clients all the time.</p>
            <div class="faq-grid">
                <article class="faq-card">
                    <h3>What areas do you cover?</h3>
                    <p>The areas I cover are Audenshaw, Denton and some areas of Dukinfield. If you live outside any of these areas, please get in touch and I will look into whether I can accommodate your area.</p>
                </article>
                <article class="faq-card">
                    <h3>Are you a registered business?</h3>
                    <p>Yes, I am a fully registered gardener and submit my accounts every year.</p>
                    <p>Payment for my services can be made by cash or online which adds convenience for my customers.</p>
                </article>
                <article class="faq-card">
                    <h3>How much do you charge?</h3>
                    <p>I consistently receive feedback that my rates are highly competitive. I ensure thorough care and attention for every garden.</p>
                    <p>For example, the average cost is £35 for a 70-minute visit, and I often spend considerably more time at the same rate. Rest assured, green waste removal comes at no additional cost.</p>
                    <p>I need to see the garden to give you a price.</p>
                </article>
                <article class="faq-card">
                    <h3>What can you do for me?</h3>
                    <p>I can visit every few weeks or arrange a one-off visit to do a garden tidy.</p>
                    <p>My work involves keeping your yard looking fresh during the growing season. A typical visit includes mowing, weeding, tidying borders and hedge/bush trimming.</p>
                    <p>If you need other garden work doing then this can be arranged.</p>
                </article>
            </div>
        </div>
    </section>

    <!-- Voices Section -->
    <section class="video-showcase" id="voices">
        <div class="container">
            <div class="section-title">
                <span class="section-eyebrow"><i class="fas fa-tower-broadcast" aria-hidden="true"></i> Real Voices</span>
                <h2>See What Our Community Is Saying</h2>
                <p>Press play on these rapid-fire stories from homeowners who trust Pay As You Mow to keep their lawns lush, welcoming, and worry-free season after season.</p>
            </div>
            <div class="video-grid">
                <article class="video-card">
                    <div class="video-card-header">
                        <span class="video-card-label"><i class="fas fa-star" aria-hidden="true"></i> Featured Story</span>
                        <span class="video-card-metric"><i class="fas fa-clock" aria-hidden="true"></i> 2 min watch</span>
                    </div>
                    <h3>“Unbeatable rates, impeccable finish”</h3>
                    <p>Ray from Data says Pay As You Mow brings unbeatable rates and meticulous work no other local gardener can rival.</p>
                    <div class="video-frame" data-video-id="pcQuRLu64-g">
                        <iframe src="https://www.youtube.com/embed/pcQuRLu64-g?si=O2Rt4JNLHxFpcFPf&amp;rel=0&amp;enablejsapi=1" title="Claire talks about Pay As You Mow" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                    </div>
                </article>
                <article class="video-card">
                    <div class="video-card-header">
                        <span class="video-card-label"><i class="fas fa-leaf" aria-hidden="true"></i> Neighbour Spotlight</span>
                        <span class="video-card-metric"><i class="fas fa-stopwatch" aria-hidden="true"></i> 90 sec watch</span>
                    </div>
                    <h3>“Pay as you go was the game changer”</h3>
                    <p>James explains why flexible visits and tidy finishes make Pay As You Mow the perfect fit for his busy schedule.</p>
                    <div class="video-frame" data-video-id="hBbBok5MkQY">
                        <iframe src="https://www.youtube.com/embed/hBbBok5MkQY?si=GS8SKBmV6uUDwKQ9&amp;rel=0&amp;enablejsapi=1" title="James shares his Pay As You Mow experience" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                    </div>
                </article>
                <article class="video-card">
                    <div class="video-card-header">
                        <span class="video-card-label"><i class="fas fa-sun" aria-hidden="true"></i> Garden Glow-Up</span>
                        <span class="video-card-metric"><i class="fas fa-play" aria-hidden="true"></i> Quick watch</span>
                    </div>
                    <h3>“From overgrown to outstanding”</h3>
                    <p>Helen walks through her transformed borders and the peace of mind that comes with a meticulous gardener.</p>
                    <div class="video-frame" data-video-id="enB1NOnPrhY">
                        <iframe src="https://www.youtube.com/embed/enB1NOnPrhY?si=EIDoJoJhiP-LsMMZ&amp;rel=0&amp;enablejsapi=1" title="Helen's Pay As You Mow testimonial" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
                    </div>
                </article>
            </div>
        </div>
    </section>

    <!-- Testimonials Section -->
    <section class="testimonials" id="testimonials">
        <div class="container">
            <div class="section-title">
                <h2>Customer Testimonials</h2>
                <p>What our clients say about our services</p>
            </div>
            <div class="testimonials-slider">
                <div class="testimonial active">
                    <p class="testimonial-text">"Pay As You Mow transformed my neglected garden into a beautiful oasis. Their flexible payment model meant I could get the help I needed without breaking the bank. Highly recommended!"</p>
                    <p class="testimonial-author">- Sarah Johnson, Northwood</p>
                </div>
                <div class="testimonial">
                    <p class="testimonial-text">"As someone who travels frequently, I love that I can schedule garden maintenance only when I need it. The team is professional, reliable, and does an amazing job every time."</p>
                    <p class="testimonial-author">- Michael Chen, Westfield</p>
                </div>
                <div class="testimonial">
                    <p class="testimonial-text">"The quality of work is exceptional. My hedges have never looked better, and the lawn is always perfectly manicured. The pay-as-you-go model is perfect for my budget."</p>
                    <p class="testimonial-author">- Emma Davis, Riverside</p>
                </div>
                <div class="testimonial-nav">
                    <span class="testimonial-dot active" data-index="0"></span>
                    <span class="testimonial-dot" data-index="1"></span>
                    <span class="testimonial-dot" data-index="2"></span>
                </div>
            </div>
        </div>
    </section>

    <!-- Booking Section -->
    <section class="booking" id="booking" data-calendar-id="andyfast20@gmail.com" data-api-key="AIzaSyBNq41YmSJrEES1bRT3FYh8hbQ5ZhgvzCM">
        <div class="container">
            <div class="booking-intro">
                <span><i class="fas fa-calendar-check" aria-hidden="true"></i> Evening consultations</span>
                <h2>Book a 30-minute garden consultation</h2>
                <p>Appointments run every Monday and Wednesday between 6:00&nbsp;pm and 8:00&nbsp;pm. Pick a time that suits you and we'll add it straight to Google Calendar.</p>
            </div>

            <p class="booking-status" id="bookingStatus" aria-live="polite">Checking the latest availability…</p>

            <div class="booking-refresh-cta">
                <button type="button" class="btn booking-refresh-btn" id="availabilityRefresh" aria-controls="bookingDays">
                    <span class="icon" aria-hidden="true"><i class="fas fa-magnifying-glass"></i></span>
                    <span class="label">Find the next available times</span>
                </button>
            </div>

            <div class="booking-layout">
                <div class="booking-schedule">
                    <header>
                        <h3>Available slots</h3>
                        <p>Times update in real time from our calendar and include a 30-minute buffer for travel.</p>
                    </header>
                    <div class="booking-days" id="bookingDays" aria-live="polite"></div>
                </div>
                <div class="booking-form">
                    <header>
                        <h3>Reserve your visit</h3>
                        <p>Select a time above, then confirm your details.</p>
                    </header>
                    <form id="bookingForm">
                        <input type="hidden" id="selectedSlot" name="selectedSlot" required>
                        <div>
                            <label for="customerName">Your name</label>
                            <input type="text" id="customerName" name="customerName" placeholder="Full name" required>
                        </div>
                        <div>
                            <label for="customerPhone">Phone number</label>
                            <input type="tel" id="customerPhone" name="customerPhone" placeholder="Mobile or landline" required>
                        </div>
                        <button type="submit">Confirm booking</button>
                        <div class="booking-feedback" id="bookingFeedback" role="status"></div>
                    </form>
                </div>
            </div>
        </div>
    </section>


    <a href="https://wa.me/447595289669" class="whatsapp-button" target="_blank" rel="noopener" aria-label="Chat with Pay As You Mow on WhatsApp">
        <span class="icon"><i class="fa-brands fa-whatsapp"></i></span>
        <div class="whatsapp-text">
            <span>Message us on</span>
            <span>WhatsApp</span>
        </div>
    </a>

    <!-- Footer -->
    <footer>
        <div class="container">
            <div class="footer-content">
                <div class="footer-column">
                    <h3>Pay As You Mow</h3>
                    <p>Professional garden maintenance with flexible payment options. Beautiful gardens, no contracts.</p>
                    <div class="social-links">
                        <a href="#"><i class="fab fa-facebook-f"></i></a>
                        <a href="#"><i class="fab fa-instagram"></i></a>
                        <a href="#"><i class="fab fa-twitter"></i></a>
                        <a href="#"><i class="fab fa-pinterest"></i></a>
                    </div>
                </div>
                <div class="footer-column">
                    <h3>Quick Links</h3>
                    <ul class="footer-links">
                        <li><a href="#home">Home</a></li>
                        <li><a href="#services">Services</a></li>
                        <li><a href="#about">About Us</a></li>
                        <li><a href="#faq">FAQ</a></li>
                        <li><a href="#booking">Book</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Our Services</h3>
                    <ul class="footer-links">
                        <li><a href="#">Lawn Mowing</a></li>
                        <li><a href="#">Hedge Trimming</a></li>
                        <li><a href="#">Weed Control</a></li>
                        <li><a href="#">Garden Cleanups</a></li>
                        <li><a href="#">Irrigation Systems</a></li>
                    </ul>
                </div>
                <div class="footer-column">
                    <h3>Contact Info</h3>
                    <ul class="footer-links">
                        <li><i class="fas fa-map-marker-alt"></i> 123 Garden Street, Greenville</li>
                        <li><i class="fas fa-phone"></i> (555) 123-4567</li>
                        <li><i class="fas fa-envelope"></i> info@payasyoumow.com</li>
                    </ul>
                </div>
            </div>
            <div class="copyright">
                <p>&copy; 2023 Pay As You Mow. All rights reserved.</p>
            </div>
        </div>
    </footer>

    <script>
        // Mobile Menu Toggle
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const nav = document.getElementById('nav');
        
        mobileMenuBtn.addEventListener('click', () => {
            nav.classList.toggle('active');
            mobileMenuBtn.innerHTML = nav.classList.contains('active') ? 
                '<i class="fas fa-times"></i>' : '<i class="fas fa-bars"></i>';
        });

        // Header Scroll Effect
        const header = document.getElementById('header');
        
        window.addEventListener('scroll', () => {
            if (window.scrollY > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }
        });

        // Hero Slider
        const heroSlides = document.querySelectorAll('.hero-slide');
        let currentHeroSlide = 0;
        const heroInterval = 4000;

        function showHeroSlide(index) {
            if (index === currentHeroSlide || !heroSlides[index]) {
                return;
            }

            const currentSlide = heroSlides[currentHeroSlide];
            const nextSlide = heroSlides[index];

            nextSlide.classList.add('active');
            currentSlide.classList.remove('active');

            currentHeroSlide = index;
        }

        if (heroSlides.length > 0) {
            heroSlides[0].classList.add('active');

            if (heroSlides.length > 1) {
                setInterval(() => {
                    const nextIndex = (currentHeroSlide + 1) % heroSlides.length;
                    showHeroSlide(nextIndex);
                }, heroInterval);
            }
        }

        // Testimonial Slider
        const testimonialDots = document.querySelectorAll('.testimonial-dot');
        const testimonials = document.querySelectorAll('.testimonial');
        
        testimonialDots.forEach(dot => {
            dot.addEventListener('click', () => {
                const index = dot.getAttribute('data-index');
                
                // Update active testimonial
                testimonials.forEach(testimonial => {
                    testimonial.classList.remove('active');
                });
                testimonials[index].classList.add('active');
                
                // Update active dot
                testimonialDots.forEach(d => {
                    d.classList.remove('active');
                });
                dot.classList.add('active');
            });
        });

        // Auto-rotate testimonials
        let currentTestimonial = 0;
        
        function rotateTestimonials() {
            testimonialDots.forEach(d => d.classList.remove('active'));
            testimonials.forEach(t => t.classList.remove('active'));
            
            currentTestimonial = (currentTestimonial + 1) % testimonials.length;
            
            testimonialDots[currentTestimonial].classList.add('active');
            testimonials[currentTestimonial].classList.add('active');
        }
        
        if (testimonialDots.length > 0 && testimonials.length > 0) {
            setInterval(rotateTestimonials, 5000);
        }

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();

                const targetId = this.getAttribute('href');
                if (targetId === '#') return;

                const targetElement = document.querySelector(targetId);
                if (targetElement) {
                    // Close mobile menu if open
                    nav.classList.remove('active');
                    mobileMenuBtn.innerHTML = '<i class="fas fa-bars"></i>';

                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // YouTube community video thumbnails
        const communityVideoFrames = Array.from(document.querySelectorAll('.video-showcase .video-frame'));
        const youtubePlayers = [];
        const youtubeOverlays = [];

        function addThumbnailOverlay(frame, index) {
            const iframe = frame.querySelector('iframe');
            if (!iframe) {
                return;
            }

            const videoId = frame.dataset.videoId;
            if (!videoId) {
                return;
            }

            if (!iframe.src.includes('enablejsapi=1')) {
                const separator = iframe.src.includes('?') ? '&' : '?';
                iframe.src = `${iframe.src}${separator}enablejsapi=1`;
            }

            if (!iframe.id) {
                iframe.id = `video-player-${index}`;
            }

            const overlay = document.createElement('div');
            overlay.className = 'video-thumbnail';
            overlay.style.backgroundImage = `url(https://img.youtube.com/vi/${videoId}/hqdefault.jpg)`;
            overlay.setAttribute('role', 'button');
            overlay.setAttribute('tabindex', '0');
            overlay.setAttribute('aria-label', 'Replay video');

            const replayVideo = () => {
                overlay.classList.remove('visible');
                const player = youtubePlayers[index];
                if (player && typeof player.seekTo === 'function') {
                    player.seekTo(0);
                    player.playVideo();
                }
            };

            overlay.addEventListener('click', replayVideo);
            overlay.addEventListener('keydown', event => {
                if (event.key === 'Enter' || event.key === ' ') {
                    event.preventDefault();
                    replayVideo();
                }
            });

            frame.appendChild(overlay);
            youtubeOverlays[index] = overlay;
        }

        function handleCommunityVideoState(event, overlay) {
            if (!overlay || typeof YT === 'undefined' || !YT.PlayerState) {
                return;
            }

            if (event.data === YT.PlayerState.ENDED) {
                overlay.classList.add('visible');
            } else if (event.data === YT.PlayerState.PLAYING) {
                overlay.classList.remove('visible');
            }
        }

        if (communityVideoFrames.length > 0) {
            communityVideoFrames.forEach((frame, index) => {
                addThumbnailOverlay(frame, index);
            });

            window.onYouTubeIframeAPIReady = function() {
                communityVideoFrames.forEach((frame, index) => {
                    const iframe = frame.querySelector('iframe');
                    if (!iframe) {
                        return;
                    }

                    const overlay = youtubeOverlays[index];

                    youtubePlayers[index] = new YT.Player(iframe.id, {
                        events: {
                            onStateChange: event => handleCommunityVideoState(event, overlay)
                        }
                    });
                });
            };

            const ytScript = document.createElement('script');
            ytScript.src = 'https://www.youtube.com/iframe_api';
            document.body.appendChild(ytScript);
        }


        // Booking availability powered by Google Calendar
        const bookingSection = document.getElementById('booking');
        const bookingDaysContainer = document.getElementById('bookingDays');
        const bookingStatus = document.getElementById('bookingStatus');
        const bookingForm = document.getElementById('bookingForm');
        const bookingFeedback = document.getElementById('bookingFeedback');
        const selectedSlotInput = document.getElementById('selectedSlot');
        const availabilityRefreshButton = document.getElementById('availabilityRefresh');

        if (bookingSection && bookingDaysContainer && bookingStatus && bookingForm && bookingFeedback && selectedSlotInput) {
            const API_KEY = bookingSection.dataset.apiKey || 'AIzaSyBNq41YmSJrEES1bRT3FYh8hbQ5ZhgvzCM';
            const CALENDAR_ID = bookingSection.dataset.calendarId || 'primary';
            const TIME_ZONE = 'Europe/London';
            const SLOT_DURATION_MINUTES = 30;
            const BUFFER_MINUTES = 30;
            const START_HOUR = 18;
            const END_HOUR = 20;
            const LOOKAHEAD_DAYS = 60;
            const MAX_DAYS = 6;
            const ALLOWED_WEEKDAYS = new Set([1, 3]); // Monday & Wednesday
            const SLOT_DURATION_MS = SLOT_DURATION_MINUTES * 60 * 1000;
            const SLOT_STEP_MS = (SLOT_DURATION_MINUTES + BUFFER_MINUTES) * 60 * 1000;
            const BUFFER_MS = BUFFER_MINUTES * 60 * 1000;
            let activeSlotButton = null;

            const weekdayFormatter = new Intl.DateTimeFormat('en-GB', { weekday: 'long' });
            const dateFormatter = new Intl.DateTimeFormat('en-GB', { month: 'long', day: 'numeric' });
            const timeFormatter = new Intl.DateTimeFormat('en-GB', { hour: 'numeric', minute: '2-digit' });

            function clearFeedback() {
                bookingFeedback.textContent = '';
                bookingFeedback.classList.remove('visible', 'error', 'success');
            }

            function showFeedback(message, { error = false, keepVisible = true } = {}) {
                bookingFeedback.textContent = message;
                bookingFeedback.classList.remove('error', 'success');
                bookingFeedback.classList.add(error ? 'error' : 'success');
                if (keepVisible) {
                    bookingFeedback.classList.add('visible');
                }
            }

            function resetSlotSelection() {
                if (activeSlotButton) {
                    activeSlotButton.classList.remove('selected');
                }
                activeSlotButton = null;
                selectedSlotInput.value = '';
            }

            function normaliseEventDate(value) {
                if (!value) {
                    return null;
                }

                try {
                    return new Date(value);
                } catch (error) {
                    return null;
                }
            }

            function unfoldICSLines(rawText) {
                const lines = rawText.split(/\r?\n/);
                const unfolded = [];

                for (let index = 0; index < lines.length; index += 1) {
                    let line = lines[index];

                    while (index + 1 < lines.length && lines[index + 1].startsWith(' ')) {
                        index += 1;
                        line += lines[index].slice(1);
                    }

                    unfolded.push(line);
                }

                return unfolded;
            }

            function parseICSDate(value, timeZone) {
                if (!value || typeof value !== 'string') {
                    return null;
                }

                const hasUTCDesignator = value.endsWith('Z');
                const [datePart, timePartRaw = ''] = value.split('T');

                if (!datePart || datePart.length !== 8) {
                    return null;
                }

                const year = Number.parseInt(datePart.slice(0, 4), 10);
                const month = Number.parseInt(datePart.slice(4, 6), 10) - 1;
                const day = Number.parseInt(datePart.slice(6, 8), 10);

                if (Number.isNaN(year) || Number.isNaN(month) || Number.isNaN(day)) {
                    return null;
                }

                let hours = 0;
                let minutes = 0;
                let seconds = 0;

                if (timePartRaw) {
                    const timePart = timePartRaw.replace(/Z$/, '');
                    hours = Number.parseInt(timePart.slice(0, 2) || '0', 10);
                    minutes = Number.parseInt(timePart.slice(2, 4) || '0', 10);
                    seconds = Number.parseInt(timePart.slice(4, 6) || '0', 10);
                }

                if (Number.isNaN(hours) || Number.isNaN(minutes) || Number.isNaN(seconds)) {
                    return null;
                }

                if (hasUTCDesignator) {
                    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));
                }

                const naiveLocalDate = new Date(year, month, day, hours, minutes, seconds);

                if (!timeZone) {
                    return Number.isNaN(naiveLocalDate.getTime()) ? null : naiveLocalDate;
                }

                try {
                    const baseUtc = Date.UTC(year, month, day, hours, minutes, seconds);
                    const formatter = new Intl.DateTimeFormat('en-US', {
                        timeZone,
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit',
                        hour12: false
                    });

                    const parts = formatter.formatToParts(new Date(baseUtc)).reduce((accumulator, part) => {
                        if (part.type !== 'literal') {
                            accumulator[part.type] = part.value;
                        }
                        return accumulator;
                    }, {});

                    const zonedUtc = Date.UTC(
                        Number.parseInt(parts.year, 10),
                        Number.parseInt(parts.month, 10) - 1,
                        Number.parseInt(parts.day, 10),
                        Number.parseInt(parts.hour, 10),
                        Number.parseInt(parts.minute, 10),
                        Number.parseInt(parts.second, 10)
                    );

                    if (Number.isNaN(zonedUtc)) {
                        return Number.isNaN(naiveLocalDate.getTime()) ? null : naiveLocalDate;
                    }

                    const offset = zonedUtc - baseUtc;
                    return new Date(baseUtc - offset);
                } catch (error) {
                    return Number.isNaN(naiveLocalDate.getTime()) ? null : naiveLocalDate;
                }
            }

            function parseICSEventDate(line) {
                const [, meta = '', value = ''] = line.match(/^(?:DTSTART|DTEND)(?:;([^:]+))?:(.+)$/) || [];
                const tzidMatch = meta.match(/TZID=([^;]+)/);
                return parseICSDate(value, tzidMatch ? tzidMatch[1] : null);
            }

            async function fetchCalendarEventsFromICS(timeMin, timeMax) {
                const calendarPath = `${encodeURIComponent(CALENDAR_ID)}/public/full.ics`;
                const icsUrl = `https://calendar.google.com/calendar/ical/${calendarPath}`;
                const response = await fetch(icsUrl, {
                    headers: {
                        Accept: 'text/calendar, text/plain'
                    }
                });

                if (!response.ok) {
                    const errorText = await response.text().catch(() => '');
                    throw new Error(errorText || `ICS request failed with status ${response.status}`);
                }

                const raw = await response.text();
                const lines = unfoldICSLines(raw);
                const minTime = new Date(timeMin);
                const maxTime = new Date(timeMax);
                const events = [];
                let currentEvent = null;

                lines.forEach(line => {
                    if (line === 'BEGIN:VEVENT') {
                        currentEvent = { start: null, end: null, cancelled: false };
                    } else if (line === 'END:VEVENT') {
                        if (currentEvent && !currentEvent.cancelled && currentEvent.start instanceof Date && currentEvent.end instanceof Date) {
                            events.push(currentEvent);
                        }
                        currentEvent = null;
                    } else if (currentEvent) {
                        if (line.startsWith('DTSTART')) {
                            currentEvent.start = parseICSEventDate(line);
                        } else if (line.startsWith('DTEND')) {
                            currentEvent.end = parseICSEventDate(line);
                        } else if (line.startsWith('STATUS:CANCELLED')) {
                            currentEvent.cancelled = true;
                        }
                    }
                });

                return events
                    .filter(event => {
                        if (!(event.start instanceof Date) || !(event.end instanceof Date)) {
                            return false;
                        }

                        return event.end.getTime() > minTime.getTime() && event.start.getTime() < maxTime.getTime();
                    })
                    .map(event => ({
                        start: event.start,
                        end: event.end
                    }));
            }

            async function fetchCalendarEvents(timeMin, timeMax) {
                const endpoint = new URL(`https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(CALENDAR_ID)}/events`);
                endpoint.searchParams.set('singleEvents', 'true');
                endpoint.searchParams.set('orderBy', 'startTime');
                endpoint.searchParams.set('timeMin', timeMin);
                endpoint.searchParams.set('timeMax', timeMax);

                if (API_KEY) {
                    endpoint.searchParams.set('key', API_KEY);
                }

                try {
                    const response = await fetch(endpoint.toString());
                    if (!response.ok) {
                        const errorText = await response.text().catch(() => '');
                        throw new Error(errorText || `Calendar request failed with status ${response.status}`);
                    }

                    const data = await response.json();
                    if (!data || !Array.isArray(data.items)) {
                        return [];
                    }

                    return data.items
                        .filter(item => item && item.status !== 'cancelled')
                        .map(item => ({
                            start: normaliseEventDate(item.start?.dateTime || item.start?.date),
                            end: normaliseEventDate(item.end?.dateTime || item.end?.date)
                        }))
                        .filter(event => event.start instanceof Date && !Number.isNaN(event.start) && event.end instanceof Date && !Number.isNaN(event.end));
                } catch (apiError) {
                    console.warn('Falling back to public ICS feed for availability data', apiError);

                    try {
                        return await fetchCalendarEventsFromICS(timeMin, timeMax);
                    } catch (icsError) {
                        const combinedError = new Error('All availability sources failed');
                        combinedError.cause = { apiError, icsError };
                        throw combinedError;
                    }
                }
            }

            function slotConflicts(slotStart, slotEnd, events) {
                const windowStart = new Date(slotStart.getTime() - BUFFER_MS);
                const windowEnd = new Date(slotEnd.getTime() + BUFFER_MS);

                return events.some(event => {
                    if (!(event.start instanceof Date) || !(event.end instanceof Date)) {
                        return false;
                    }

                    return event.end.getTime() > windowStart.getTime() && event.start.getTime() < windowEnd.getTime();
                });
            }

            function generateSlotsForDay(dayDate, events, now) {
                const slots = [];
                const startOfDay = new Date(dayDate);
                startOfDay.setHours(START_HOUR, 0, 0, 0);

                const closingTime = new Date(dayDate);
                closingTime.setHours(END_HOUR, 0, 0, 0);

                for (let slotStart = new Date(startOfDay); slotStart < closingTime; slotStart = new Date(slotStart.getTime() + SLOT_STEP_MS)) {
                    const slotEnd = new Date(slotStart.getTime() + SLOT_DURATION_MS);

                    if (slotEnd > closingTime) {
                        break;
                    }

                    const inPast = slotStart.getTime() <= now.getTime();
                    const hasConflict = slotConflicts(slotStart, slotEnd, events);

                    slots.push({
                        start: new Date(slotStart),
                        end: new Date(slotEnd),
                        unavailable: inPast || hasConflict
                    });
                }

                return slots;
            }

            function buildDayRecords(events) {
                const days = [];
                const now = new Date();
                const cursor = new Date();
                cursor.setHours(0, 0, 0, 0);

                for (let inspected = 0; inspected < LOOKAHEAD_DAYS && days.length < MAX_DAYS; inspected += 1) {
                    if (ALLOWED_WEEKDAYS.has(cursor.getDay())) {
                        const daySlots = generateSlotsForDay(cursor, events, now);
                        days.push({
                            date: new Date(cursor),
                            slots: daySlots,
                            availableSlots: daySlots.filter(slot => !slot.unavailable)
                        });
                    }

                    cursor.setDate(cursor.getDate() + 1);
                }

                return days;
            }

            function renderDays(days, { updateStatus = true } = {}) {
                bookingDaysContainer.innerHTML = '';
                resetSlotSelection();

                if (!days.length) {
                    const emptyMessage = document.createElement('p');
                    emptyMessage.className = 'booking-no-slots';
                    emptyMessage.textContent = 'No booking days are currently available. Please check back soon.';
                    bookingDaysContainer.appendChild(emptyMessage);
                    return 0;
                }

                const openSlots = days.reduce((count, day) => count + day.availableSlots.length, 0);

                days.forEach(day => {
                    const dayCard = document.createElement('article');
                    dayCard.className = 'booking-day';

                    const header = document.createElement('div');
                    header.className = 'booking-day-header';

                    const title = document.createElement('div');
                    title.className = 'booking-day-title';
                    title.textContent = weekdayFormatter.format(day.date);

                    const dateLabel = document.createElement('div');
                    dateLabel.className = 'booking-day-date';
                    dateLabel.textContent = dateFormatter.format(day.date);

                    header.append(title, dateLabel);
                    dayCard.appendChild(header);

                    const slotsWrapper = document.createElement('div');
                    slotsWrapper.className = 'booking-slots';

                    if (!day.slots.length) {
                        const noSlots = document.createElement('p');
                        noSlots.className = 'booking-no-slots';
                        noSlots.textContent = 'No evening times on this date.';
                        dayCard.appendChild(noSlots);
                    } else {
                        day.slots.forEach(slot => {
                            const button = document.createElement('button');
                            button.type = 'button';
                            button.className = 'booking-slot';
                            const startLabel = timeFormatter.format(slot.start);
                            const endLabel = timeFormatter.format(slot.end);
                            button.textContent = startLabel;
                            button.title = `${startLabel} – ${endLabel}`;

                            if (slot.unavailable) {
                                button.disabled = true;
                                button.setAttribute('aria-disabled', 'true');
                            } else {
                                button.dataset.start = slot.start.toISOString();
                                button.dataset.end = slot.end.toISOString();
                                button.addEventListener('click', () => {
                                    if (activeSlotButton) {
                                        activeSlotButton.classList.remove('selected');
                                    }

                                    button.classList.add('selected');
                                    activeSlotButton = button;
                                    selectedSlotInput.value = `${button.dataset.start}|${button.dataset.end}`;
                                    clearFeedback();
                                });
                            }

                            slotsWrapper.appendChild(button);
                        });

                        if (!day.availableSlots.length) {
                            const notice = document.createElement('p');
                            notice.className = 'booking-no-slots';
                            notice.textContent = 'Fully booked – please try another day.';
                            dayCard.appendChild(notice);
                        }

                        dayCard.appendChild(slotsWrapper);
                    }

                    bookingDaysContainer.appendChild(dayCard);
                });

                if (updateStatus) {
                    if (openSlots === 0) {
                        bookingStatus.textContent = 'All available consultations are booked. Please choose another date or contact us for cancellations.';
                    } else if (openSlots <= 2) {
                        bookingStatus.textContent = 'Only a couple of evening slots remain – reserve yours now.';
                    } else {
                        bookingStatus.textContent = 'Select an evening slot that works for you.';
                    }
                }

                return openSlots;
            }

            function getManualSuggestionDates(referenceDate) {
                const anchor = new Date(referenceDate);
                anchor.setHours(18, 0, 0, 0);

                const currentDay = anchor.getDay();
                const daysUntilNextMonday = ((8 - currentDay) % 7) || 7;

                const nextMonday = new Date(anchor);
                nextMonday.setDate(anchor.getDate() + daysUntilNextMonday);

                const nextWednesday = new Date(nextMonday);
                nextWednesday.setDate(nextMonday.getDate() + 2);

                const followingMonday = new Date(nextMonday);
                followingMonday.setDate(nextMonday.getDate() + 7);

                return [nextMonday, nextWednesday, followingMonday];
            }

            function buildManualFallbackDays(referenceDate) {
                return getManualSuggestionDates(referenceDate)
                    .map(date => {
                        const slots = generateSlotsForDay(date, [], referenceDate).map(slot => ({
                            ...slot,
                            unavailable: false
                        }));

                        return {
                            date: new Date(date),
                            slots,
                            availableSlots: slots
                        };
                    })
                    .filter(day => day.availableSlots.length > 0);
            }

            function formatManualSuggestion(date) {
                const dateLabel = date.toLocaleDateString(undefined, {
                    weekday: 'long',
                    month: 'long',
                    day: 'numeric'
                });

                return `${dateLabel} between 6:00 pm and 8:00 pm`;
            }

            function appendManualSuggestionNotice(referenceDate, {
                intro,
                outro = 'Send us the option that works best and we will confirm straight away.',
                includeSuggestions = true
            } = {}) {
                const note = document.createElement('div');
                note.className = 'booking-manual-note';

                if (intro) {
                    const introParagraph = document.createElement('p');
                    introParagraph.textContent = intro;
                    note.appendChild(introParagraph);
                }

                if (includeSuggestions) {
                    const suggestions = document.createElement('ul');
                    suggestions.className = 'booking-suggestions';

                    getManualSuggestionDates(referenceDate).forEach(date => {
                        const item = document.createElement('li');
                        item.textContent = formatManualSuggestion(date);
                        suggestions.appendChild(item);
                    });

                    if (suggestions.children.length > 0) {
                        note.appendChild(suggestions);
                    }
                }

                if (outro) {
                    const outroParagraph = document.createElement('p');
                    outroParagraph.textContent = outro;
                    note.appendChild(outroParagraph);
                }

                bookingDaysContainer.appendChild(note);
                return note;
            }

            async function loadAvailability() {
                bookingDaysContainer.setAttribute('aria-busy', 'true');
                bookingStatus.textContent = 'Checking the latest availability…';
                clearFeedback();

                const now = new Date();
                const rangeEnd = new Date(now);
                rangeEnd.setDate(rangeEnd.getDate() + LOOKAHEAD_DAYS);

                try {
                    const events = await fetchCalendarEvents(now.toISOString(), rangeEnd.toISOString());
                    const days = buildDayRecords(events);
                    const openSlots = renderDays(days);

                    if (openSlots === 0) {
                        bookingStatus.textContent = 'All available consultations are booked. Pick one of the suggested evening times and we will confirm manually.';
                        appendManualSuggestionNotice(now, {
                            intro: 'We can usually open one of these evening slots for you even when the calendar is full:',
                            includeSuggestions: true
                        });
                    }
                } catch (error) {
                    console.error('Failed to load Google Calendar availability', error);
                    const fallbackDays = buildManualFallbackDays(now);

                    if (fallbackDays.length) {
                        bookingStatus.textContent = 'We could not connect to Google Calendar. Choose one of the evening slots below and we will confirm manually.';
                        renderDays(fallbackDays, { updateStatus: false });

                        appendManualSuggestionNotice(now, {
                            includeSuggestions: false,
                            outro: 'Submit your preferred time and our team will reserve the slot and confirm with you directly.'
                        });
                    } else {
                        bookingStatus.textContent = 'We could not connect to Google Calendar. Please pick a preferred time and we will confirm manually.';
                        bookingDaysContainer.innerHTML = '';
                        const fallback = document.createElement('div');
                        fallback.className = 'booking-no-slots';

                        const intro = document.createElement('p');
                        intro.textContent = 'Availability is temporarily offline. In the meantime, here are a few evening slots we can hold for you next week:';
                        fallback.appendChild(intro);

                        const suggestions = document.createElement('ul');
                        suggestions.className = 'booking-suggestions';
                        getManualSuggestionDates(now).forEach(date => {
                            const item = document.createElement('li');
                            item.textContent = formatManualSuggestion(date);
                            suggestions.appendChild(item);
                        });
                        fallback.appendChild(suggestions);

                        const outro = document.createElement('p');
                        outro.textContent = 'Send us the option that works best and we will confirm straight away.';
                        fallback.appendChild(outro);

                        bookingDaysContainer.appendChild(fallback);
                    }
                } finally {
                    bookingDaysContainer.removeAttribute('aria-busy');
                }
            }

            if (availabilityRefreshButton) {
                const refreshButtonLabel = availabilityRefreshButton.querySelector('.label');
                const defaultRefreshLabel = refreshButtonLabel
                    ? refreshButtonLabel.textContent.trim()
                    : availabilityRefreshButton.textContent.trim();

                availabilityRefreshButton.addEventListener('click', () => {
                    availabilityRefreshButton.disabled = true;
                    availabilityRefreshButton.setAttribute('aria-busy', 'true');

                    if (refreshButtonLabel) {
                        refreshButtonLabel.textContent = 'Searching availability…';
                    } else {
                        availabilityRefreshButton.textContent = 'Searching availability…';
                    }

                    loadAvailability().finally(() => {
                        availabilityRefreshButton.disabled = false;
                        availabilityRefreshButton.removeAttribute('aria-busy');

                        if (refreshButtonLabel) {
                            refreshButtonLabel.textContent = defaultRefreshLabel;
                        } else {
                            availabilityRefreshButton.textContent = defaultRefreshLabel;
                        }

                        availabilityRefreshButton.focus();
                    });
                });
            }

            async function createCalendarEvent({ start, end, name, phone }) {
                const endpoint = new URL(`https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(CALENDAR_ID)}/events`);
                if (API_KEY) {
                    endpoint.searchParams.set('key', API_KEY);
                }

                const payload = {
                    summary: name ? `Garden consultation with ${name}` : 'Garden consultation',
                    description: [`Name: ${name || 'Not provided'}`, `Phone: ${phone}`, '', 'Created via the Pay As You Mow booking page.'].join('
'),
                    start: {
                        dateTime: start,
                        timeZone: TIME_ZONE
                    },
                    end: {
                        dateTime: end,
                        timeZone: TIME_ZONE
                    },
                    reminders: {
                        useDefault: true
                    }
                };

                const response = await fetch(endpoint.toString(), {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) {
                    const errorBody = await response.text().catch(() => '');
                    throw new Error(errorBody || `Calendar request failed with status ${response.status}`);
                }

                return response.json().catch(() => null);
            }

            const submitButton = bookingForm.querySelector('button[type="submit"]');

            bookingForm.addEventListener('submit', async event => {
                event.preventDefault();

                const slotValue = selectedSlotInput.value;
                const name = bookingForm.customerName.value.trim();
                const phone = bookingForm.customerPhone.value.trim();

                if (!slotValue) {
                    showFeedback('Please choose a time slot before confirming.', { error: true });
                    return;
                }

                if (!name || !phone) {
                    showFeedback('Add your name and phone number so we can confirm the visit.', { error: true });
                    return;
                }

                const [slotStart, slotEnd] = slotValue.split('|');
                if (!slotStart || !slotEnd) {
                    showFeedback('We could not read the chosen slot. Please pick it again.', { error: true });
                    return;
                }

                submitButton.disabled = true;
                showFeedback('Saving your booking…', { error: false });

                try {
                    await createCalendarEvent({ start: slotStart, end: slotEnd, name, phone });
                    showFeedback('All set! Your consultation has been scheduled.', { error: false });
                    bookingForm.reset();
                    resetSlotSelection();
                    await loadAvailability();
                } catch (error) {
                    console.error('Unable to create Google Calendar event', error);
                    showFeedback('We could not save your booking automatically. Please call us and we will secure the time for you.', { error: true });
                } finally {
                    submitButton.disabled = false;
                }
            });

            loadAvailability();
        }
    </script>
</body>
</html>
